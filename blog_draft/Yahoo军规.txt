5.将CSS放在页面最上面
  1.防止ie下,禁止页面内容顺序显示,出现空白
  2.页面初始界面需要重新渲染,造成页面闪烁抖动
6.将script放在页面最下面
7.避免在CSS中使用Expressions
	页面滚动,鼠标滑动都会导致expression重新计算,次数非常多,很容易崩溃
8.把JS和CSS放到外部文件中
	单独提取优点: 提高js和css复用性 减小页面体积 
		提高了js和css的可维护性 方便浏览器缓存
	写在页面内: 减少请求数 提升页面渲染速度
	写在页面内的情况: 只应用于一个页面 不经常被访问 脚本和样式很少
9.减少DNS查询,利用缓存
	DNS（Domain Name System，域名系统），因特网上作为域名和IP地址相
	互映射的一个分布式数据库，能够使用户更方便的访问互联网，而不用去记住能
	够被机器直接读取的IP数串。通过主机名，最终得到该主机名对应的IP地址的
	过程叫做域名解析（或主机名解析）
10.最小化JavaScript和CSS
	1.去除空白符,注释...
	2.缩写变量名, 函数名
11.避免重定向
	重定向状态码:
		301 Moved Permanently:页面被移动到另外的位置,页面收到信息后会再发起请求(永久重定向)
		302 Found:页面被找到了但不在原始位置,服务器会返回地址,浏览器会再发起请求(临时重定向)
		301搜索引擎会智能更改地址, 302搜索引擎还是找旧地址再跳新地址
	增加了Http请求
12.移除重复脚本
13.配置实体标签(ETag)
	标识缓存版本
14.使用AJAX缓存
	POST 不被缓存
	GET 可以被缓存